print ("Python 2.7.14 (v2.7.14:84471935ed, Sep 16 2017, 20:19:30) [MSC v.1500 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.")
>>>
sleep (1)
>>> h
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'h' is not defined
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> h
no Python documentation found for 'h'

help> h
no Python documentation found for 'h'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> h
no Python documentation found for 'h'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> h
no Python documentation found for 'h'

help> h
no Python documentation found for 'h'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> cls
no Python documentation found for 'cls'

help> sclear
no Python documentation found for 'sclear'

help> cls
no Python documentation found for 'cls'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> cls
no Python documentation found for 'cls'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> sclear
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sclear' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> cls
no Python documentation found for 'cls'

help> sclear
no Python documentation found for 'sclear'

help> cls
no Python documentation found for 'cls'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> cls
no Python documentation found for 'cls'

help> sclear
no Python documentation found for 'sclear'

help> cls
no Python documentation found for 'cls'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> sclear
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sclear' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> sclear
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sclear' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>>
>>>
>>>
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help(string)
nTraceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Python27\lib\site.py", line 446, in __call__
    return pydoc.help(*args, **kwds)
  File "C:\Python27\lib\pydoc.py", line 1798, in __call__
    self.interact()
  File "C:\Python27\lib\pydoc.py", line 1816, in interact
    self.help(request)
  File "C:\Python27\lib\pydoc.py", line 1840, in help
    elif request: doc(request, 'Help on %s:')
  File "C:\Python27\lib\pydoc.py", line 1581, in doc
    print value
IOError: [Errno 2] No such file or directory
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> h
no Python documentation found for 'h'

help> h
no Python documentation found for 'h'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> h
no Python documentation found for 'h'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> h
no Python documentation found for 'h'

help> h
no Python documentation found for 'h'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> cls
no Python documentation found for 'cls'

help> sclear
no Python documentation found for 'sclear'

help> cls
no Python documentation found for 'cls'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help
Type help() for interactive help, or help(object) for help about object.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> cls
no Python documentation found for 'cls'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> sclear
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sclear' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> cls
no Python documentation found for 'cls'

help> sclear
no Python documentation found for 'sclear'

help> cls
no Python documentation found for 'cls'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> cls
no Python documentation found for 'cls'

help> sclear
no Python documentation found for 'sclear'

help> cls
no Python documentation found for 'cls'

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> sclear
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sclear' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> sclear
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sclear' is not defined
>>> cls
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'cls' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>>
>>>
>>>
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help(string)
nTraceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Python27\lib\site.py", line 446, in __call__
    return pydoc.help(*args, **kwds)
  File "C:\Python27\lib\pydoc.py", line 1798, in __call__
    self.interact()
  File "C:\Python27\lib\pydoc.py", line 1816, in interact
    self.help(request)
  File "C:\Python27\lib\pydoc.py", line 1840, in help
    elif request: doc(request, 'Help on %s:')
  File "C:\Python27\lib\pydoc.py", line 1581, in doc
    print value
IOError: [Errno 2] No such file or directory
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help()
no Python documentation found for 'help()'

help> help(string)
no Python documentation found for 'help(string)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(string)
no Python documentation found for 'help(string)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(string)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'string' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>>
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>>
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>>
>>>
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>>
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> help(tutorial)
no Python documentation found for 'help(tutorial)'

help> credit
no Python documentation found for 'credit'

help> credit
no Python documentation found for 'credit'

help> credit
no Python documentation found for 'credit'

help> credits
Help on _Printer in module site object:

credits = class _Printer(__builtin__.object)
 |  interactive prompt objects for printing the license text, a list of
 |  contributors and the copyright notice.
 |
 |  Methods defined here:
 |
 |  __call__(self)
 |
 |  __init__(self, name, data, files=(), dirs=())
 |
 |  __repr__(self)
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |
 |  __dict__
 |      dictionary for instance variables (if defined)
 |
 |  __weakref__
 |      list of weak references to the object (if defined)
 |
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |
 |  MAXLINES = 23

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>>
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>>
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>>
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>>
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>>
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>> credits
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.
>>>
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>>
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> credit
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'credit' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)credit
  File "<stdin>", line 1
    help(tutorial)credit
                       ^
SyntaxError: invalid syntax
>>> help(tutorial)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tutorial' is not defined
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help>

You are now leaving help and returning to the Python interpreter.
If you want to ask for help on a particular object directly from the
interpreter, you can type "help(object)".  Executing "help('string')"
has the same effect as typing a particular string at the help> prompt.
>>>
>>> help()

Welcome to Python 2.7!  This is the online help utility.

If this is your first time using Python, you should definitely check out
the tutorial on the Internet at http://docs.python.org/2.7/tutorial/.

Enter the name of any module, keyword, or topic to get help on writing
Python programs and using Python modules.  To quit this help utility and
return to the interpreter, just type "quit".

To get a list of available modules, keywords, or topics, type "modules",
"keywords", or "topics".  Each module also comes with a one-line summary
of what it does; to list the modules whose summaries contain a given word
such as "spam", type "modules spam".

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> help()
no Python documentation found for 'help()'

help> credits
Help on _Printer in module site object:

credits = class _Printer(__builtin__.object)
 |  interactive prompt objects for printing the license text, a list of
 |  contributors and the copyright notice.
 |
 |  Methods defined here:
 |
 |  __call__(self)
 |
 |  __init__(self, name, data, files=(), dirs=())
 |
 |  __repr__(self)
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |
 |  __dict__
 |      dictionary for instance variables (if defined)
 |
 |  __weakref__
 |      list of weak references to the object (if defined)
 |
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |
 |  MAXLINES = 23

help>